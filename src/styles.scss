@use '@angular/material' as mat;
@font-face {
  font-family: "w-b";
  src: url("/assets/fonts/WorkSans-Black.otf");
}
@font-face {
  font-family: "w-bold";
  src: url("/assets/fonts/WorkSans-Bold.otf");
}
@font-face {
  font-family: "w-e-b";
  src: url("/assets/fonts/WorkSans-ExtraBold.otf");
}
@font-face {
  font-family: "w-e-l";
  src: url("/assets/fonts/WorkSans-ExtraLight.otf");
}
@font-face {
  font-family: "w-l";
  src: url("/assets/fonts/WorkSans-Light.otf");
}
@font-face {
  font-family: "w-m";
  src: url("/assets/fonts/WorkSans-Medium.otf");
}
@font-face {
  font-family: "w-r";
  src: url("/assets/fonts/WorkSans-Regular.otf");
}
@font-face {
  font-family: "w-s-b";
  src: url("/assets/fonts/WorkSans-SemiBold.otf");
}

$fonts:(
		  base:'Work Sans',
		  regular:'w-r',
		  semiBold:'w-s-b',
		  medium:'w-m',
		  extraLight:'w-e-l',
		  light:'w-l',
		  extrabold:'w-e-b',
		  bold:'w-bold',
		  black:'w-b'
    );
$colorsN:(
	blancoF: #F2F3F5,
	blanco2: #FFFFFF,
	gris1N: #000026,
	gris2N: #C1C6D1,
	gris3N: #000029,
	gris4N: #707070,
	gris6N: #7782AD5A,
	gris7N: #2932554D,
	negro1N: #1F1F1F,
	negro2N: #000000
);
$colors: (
  card_riesgo:#87F2EA,
  menu:#FEB238,
  blanco:#fff,
  azulcielo2:#E7F0FD,
  azulprimary:#3582De,
  primary:#3582De,
  azulcielo:#1476FC,
  azulcielo3:#1476FC26,
  azuladmyo:    #005d8f,
  succes: #00a65a,
  orange:#F7941D,
  naranja:  #fdb44b,
  danger:#BF1E2E,
  danger1:     #f53d3d,
  dark:       #222,
  gary-lte:  #d2d6de,
  aqua: #87F2EA,
  aqua2:#10E0D0,
  yellow: #f39c12,
  blue: #0073b7,
  navy: #001F3F,
  teal: #39CCCC,
  olive: #3D9970,
  lime: #01FF70,
  secondary: #F7941D,
  fuchsia: #F012BE,
  purple: #605ca8,
  maroon: #D81B60,
  blackk: #000,
  dark-2: #222d32,
  light-gray: #444,
  alight-gray:#d3d3d3d3,
  red-danger:#F8E1E5,
  red-t-danger:#F2143F
);
$gamagrises:(
gris1:#f4f3f3,
gris2:#dfdfdf,
gris3:#393e46,
girsmenu:#555,
gris4:#eaeaea,
gris5:#dae1e7,
gris6:#6c757d,
girs7:#A0A0A0,
grismenuopaco:rgba(#555,0.6)
	);

  $spaceamounts: (1,2,3,4,5, 10, 15, 20, 25, 30, 35, 40, 45, 50,55,60,65,70, 75,80,85,90,95,100,110,120,130,140);
  $sides: (top, bottom, left, right);

  @each $space in $spaceamounts {
    .p-#{"" +$space} {
      padding: #{"" +$space}px !important;
     }
     .wpx-#{"" +$space} {
      width: #{"" +$space}px !important;
     }
     .hpx-#{"" +$space} {
      height: #{"" +$space}px !important;
     }
    @each $side in $sides {
      .m-#{str-slice($side, 0, 1)}-#{$space} {
        margin-#{$side}: #{$space}px !important;
      }
      .p-#{str-slice($side, 0, 1)}-#{$space} {
        padding-#{$side}: #{$space}px !important;
      }
    }
  }
  @each $profile, $font in $fonts {
    .text-#{"" +$profile}{
      font-family: $font !important;
    }
  }
  @each $profile, $bgcolor in $colorsN {
    .text-#{"" +$profile}{
      color: $bgcolor !important;
    }
    .bg-#{"" +$profile}{
      background:$bgcolor  !important;
      border-color:$bgcolor !important;
      color:map-get( $colors, blanco);

    }
  }
  @each $profile, $bgcolor in $gamagrises {
    .text-#{"" +$profile}{
      color: $bgcolor !important;
    }
    .bg-#{"" +$profile}{
      background:$bgcolor  !important;
      border-color:$bgcolor !important;
      color:map-get( $colors, blanco);

    }
    .btn-#{"" +$profile}{
      background:$bgcolor  !important;
      border-color:$bgcolor !important;
      color:map-get( $colors, blanco);
      font-family: map-get($fonts, medium );
      font-size: 14px;
      border-radius: 2px;
      width: 134px;
      height: 45px;
      display: flex;
      justify-content: center;
      align-items: center;

    }
    .btn-outline-#{"" +$profile}{
      color:$bgcolor;
      background: transparent !important;
      border-color: $bgcolor !important;
      border-radius: 0px !important;
      transition: all 0.5s;
      font-family: map-get($fonts, medium );
      font-size: 14px;
      border-radius: 2px;
      width: 134px;
      height: 45px;
      display: flex;
      justify-content: center;
      align-items: center;
      &:hover{
         color:map-get($colors,blanco);
        transition: all 0.5s;
        background:rgba($bgcolor,1)!important ;
        border-color: $bgcolor !important;
      }
    }
  }
  @each $profile, $bgcolor in $colors {
    .bg-#{"" +$profile}{
      background:$bgcolor  !important;
      border-color:$bgcolor !important;
      color:map-get( $colors, blanco);
    }
    .border-#{"" +$profile}{
      border-color:$bgcolor !important;
    }
    .text-#{"" +$profile}{
      color:$bgcolor !important;
    }
    .btn-outline-#{"" +$profile}{
      color:$bgcolor;
      background: transparent !important;
      border-color: $bgcolor !important;
      transition: all 0.5s;
      font-size:14px;
      border-radius: 2px ;
      width: 134px;
      height: 45px;
      display: flex;
      justify-content: center;
      align-items: center;
      &:hover{
        color:map-get($colors,blanco);
        transition: all 0.5s;
      background:rgba($bgcolor,1) !important ;
        border-color: $bgcolor !important;
      }
    }

    .btn-#{"" +$profile}{
      color:map-get($colors,blanco);
      background: $bgcolor !important;
      border-color: $bgcolor !important;
      font-size:14px;
      transition: all 0.5s;
       border-radius: 2px;
      width: 134px;
      height: 45px;
      display: flex;
      justify-content: center;
      align-items: center;
      &:hover{
        transition: all 0.5s;
        color:$bgcolor ;
        background:transparent !important ;
        border-color: $bgcolor !important;
      }
    }


  }



// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$frontend-primary: mat.define-palette(mat.$indigo-palette);
$frontend-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$frontend-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$frontend-theme: mat.define-light-theme((
  color: (
    primary: $frontend-primary,
    accent: $frontend-accent,
    warn: $frontend-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($frontend-theme);

/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }



.mat-button.mat-success,
.mat-stroked-button.mat-success {
    color: map-get($colors, succes );
    &:hover{
      background-color: #0dc532;
    }
}

.mat-raised-button.mat-success,
.mat-flat-button.mat-success,
.mat-fab.mat-success,
.mat-mini-fab.mat-success {
  color: #f0fff3;
  background-color: map-get($colors, succes );
}

.mat-icon-button.mat-success {
  color:map-get($colors, succes );
}

// button color primary
.mat-button.mat-primary,
.mat-stroked-button.mat-primary {
    color: map-get($colors, primary );
    &:hover{
      background-color: #077ae6;
    }
}

.mat-raised-button.mat-primary,
.mat-flat-button.mat-primary,
.mat-fab.mat-primary,
.mat-mini-fab.mat-primary {
  color: #f0fff3;
  background-color: map-get($colors, primary );
}

.mat-icon-button.mat-primary {
  color:map-get($colors, primary );
}


// button color warning
.mat-button.mat-warn,
.mat-stroked-button.mat-warn {
    color: map-get($colors, secondary);
    background-color: #fff;
    border: map-get($colors, secondary);
    &:hover{
      color: #fff;
      background-color: map-get($colors, secondary);
    }
}

.mat-raised-button.mat-warn,
.mat-flat-button.mat-warn,
.mat-fab.mat-warn,
.mat-mini-fab.mat-warn {
  color: map-get($colors, secondary );
  background-color: #fff;
}

.mat-icon-button.mat-warn {
  color:map-get($colors, secondary );
}

.mat-fab.mat-warn {
 &.plus{
   & .material-icons{
    height:48px !important;
    width:48px !important;
    font-size:48px !important;
    line-height: 25px;
   }
 }

}

.mat-form-field {
  font-size: 22px;
  & label {
    font-size: 22px;
  }
}
.form-group{
  & label{
    margin-bottom: 10px;
    color: rgba(map-get($colors , light-gray) ,0.7);
  }
  & label, & input,& select,& textarea{
     font-size: 15px;
     font-family: map-get($fonts,  semiBold);
  }
  & input,& select,& textarea{
    color: rgba(map-get($colors , blackk) ,0.7);
  }
  & .input-group{
      & .input-group-prepend{
        background: #fff;
      }
      & .input-group-text{
        background: #fff;
        border-color: transparent;
        font-size: 18px;
      }
  }
}
